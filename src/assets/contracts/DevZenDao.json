{
  "contractName": "DevZenDao",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "repToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_EMERGENCY_CHANGE_GUEST",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ONE_AD_SLOT_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REP_TOKENS_REWARD_TEAM_MEMBERS",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_REPUTATION_TOKENS_PER_WEEK_AMOUNT",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_TOKENS_PER_WEEK_AMOUNT",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_UPDATE_DAO_PARAMS",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "devZenToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextEpisode",
      "outputs": [
        {
          "name": "nextShowHost",
          "type": "address"
        },
        {
          "name": "nextShowGuest",
          "type": "address"
        },
        {
          "name": "prevShowHost",
          "type": "address"
        },
        {
          "name": "prevShowGuest",
          "type": "address"
        },
        {
          "name": "usedSlots",
          "type": "uint256"
        },
        {
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "name": "isEmergencyGuest",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_SELECT_NEXT_HOST",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REP_TOKENS_REWARD_HOST",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BECOME_GUEST_STAKE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_WITHDRAW_ETHER",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_MOVE_TO_NEXT_EPISODE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEV_ZEN_CHANGE_GUEST",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REP_TOKENS_REWARD_GUEST",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "params",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ONE_TOKEN_PRICE_IN_WEI",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "onUpgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_daoBase",
          "type": "address"
        },
        {
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_output",
          "type": "address"
        }
      ],
      "name": "DevZenDaoCore_WithdrawEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_nextHost",
          "type": "address"
        }
      ],
      "name": "DevZenDaoCore_SelectNextHost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_guest",
          "type": "address"
        }
      ],
      "name": "DevZenDaoCore_ChangeTheGuest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DevZenDaoCore_BurnGuestStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_guest",
          "type": "address"
        }
      ],
      "name": "DevZenDaoCore_Emergency_ChangeTheGuest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_guestHasCome",
          "type": "bool"
        }
      ],
      "name": "DevZenDaoCore_MoveToNextEpisode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_adText",
          "type": "string"
        }
      ],
      "name": "DevZenDaoCore_RunAdsInTheNextEpisode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DevZenDaoCore_BecomeTheNextShowGuest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DevZenDaoCore_BuyTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DevZenDaoCore_IsOneWeekPassed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_guest",
          "type": "address"
        }
      ],
      "name": "DevZenDaoCore_SetGuest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_param",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "SetParam",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_param",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setParam",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_output",
          "type": "address"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nextHost",
          "type": "address"
        }
      ],
      "name": "selectNextHost",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_guest",
          "type": "address"
        }
      ],
      "name": "changeTheGuest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_guest",
          "type": "address"
        }
      ],
      "name": "emergency_ChangeTheGuest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_guestHasCome",
          "type": "bool"
        }
      ],
      "name": "moveToNextEpisode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_adText",
          "type": "string"
        }
      ],
      "name": "runAdsInTheNextEpisode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "becomeTheNextShowGuest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOneWeekPassed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620036f5380380620036f58339810180604052620000379190810190620002a0565b818181806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb8ec972306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620000f291906200030b565b600060405180830381600087803b1580156200010d57600080fd5b505af115801562000122573d6000803e3d6000fd5b50505050508060008151811015156200013757fe5b90602001906020020151600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018151811015156200019157fe5b90602001906020020151600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620003e7565b6000620001f382516200039f565b905092915050565b600082601f83011215156200020f57600080fd5b815162000226620002208262000356565b62000328565b915081818352602084019350602081019050838560208402820111156200024c57600080fd5b60005b83811015620002805781620002658882620001e5565b8452602084019350602083019250506001810190506200024f565b5050505092915050565b6000620002988251620003bf565b905092915050565b60008060408385031215620002b457600080fd5b6000620002c4858286016200028a565b925050602083015167ffffffffffffffff811115620002e257600080fd5b620002f085828601620001fb565b9150509250929050565b6200030581620003d3565b82525050565b6000602082019050620003226000830184620002fa565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200034c57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200036e57600080fd5b602082029050602081019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003cc826200037f565b9050919050565b6000620003e0826200037f565b9050919050565b6132fe80620003f76000396000f300608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063153951971461019257806329034a5c146101bb5780632ce252bf146101e65780632fafa7501461020f57806338ed6d5a1461023a57806341be44f9146102655780634d7e0ec4146102905780635651a44f146102bb5780635eda4f24146102e657806361d71edf14610311578063720948e41461033c5780637633b4ed146103675780637b92207d1461039857806382547801146103c1578063877d4522146103ea5780638beeb48814610415578063929abf841461042c5780639827e172146104575780639b66e0d6146104825780639b9db5d6146104ad5780639f30490a146104b7578063aed60563146104e0578063af933b571461050b578063c57521ec14610534578063caaa93d31461055f578063d0febe4c1461058a578063d6263c4014610594578063dc6ab527146105bd578063e2b13553146105fa578063fa34c84e14610625575b34801561018c57600080fd5b50600080fd5b34801561019e57600080fd5b506101b960048036036101b49190810190612d2a565b61064e565b005b3480156101c757600080fd5b506101d0610766565b6040516101dd919061309e565b60405180910390f35b3480156101f257600080fd5b5061020d60048036036102089190810190612de1565b61078c565b005b34801561021b57600080fd5b50610224610798565b604051610231919061305a565b60405180910390f35b34801561024657600080fd5b5061024f6107d1565b60405161025c919061305a565b60405180910390f35b34801561027157600080fd5b5061027a6107f8565b604051610287919061305a565b60405180910390f35b34801561029c57600080fd5b506102a561081f565b6040516102b2919061303f565b60405180910390f35b3480156102c757600080fd5b506102d061082e565b6040516102dd919061305a565b60405180910390f35b3480156102f257600080fd5b506102fb610855565b604051610308919061305a565b60405180910390f35b34801561031d57600080fd5b5061032661087c565b604051610333919061305a565b60405180910390f35b34801561034857600080fd5b506103516108b5565b60405161035e919061309e565b60405180910390f35b34801561037357600080fd5b5061037c6108db565b60405161038f9796959493929190612f47565b60405180910390f35b3480156103a457600080fd5b506103bf60048036036103ba9190810190612cd8565b610998565b005b3480156103cd57600080fd5b506103e860048036036103e39190810190612cd8565b610ab0565b005b3480156103f657600080fd5b506103ff610bc8565b60405161040c919061305a565b60405180910390f35b34801561042157600080fd5b5061042a610c01565b005b34801561043857600080fd5b50610441610c0b565b60405161044e919061305a565b60405180910390f35b34801561046357600080fd5b5061046c610c32565b604051610479919061305a565b60405180910390f35b34801561048e57600080fd5b50610497610c59565b6040516104a4919061305a565b60405180910390f35b6104b5610c92565b005b3480156104c357600080fd5b506104de60048036036104d99190810190612da5565b610ecc565b005b3480156104ec57600080fd5b506104f5610fe6565b604051610502919061305a565b60405180910390f35b34801561051757600080fd5b50610532600480360361052d9190810190612cd8565b61101f565b005b34801561054057600080fd5b50610549611137565b604051610556919061305a565b60405180910390f35b34801561056b57600080fd5b50610574611170565b604051610581919061305a565b60405180910390f35b610592611197565b005b3480156105a057600080fd5b506105bb60048036036105b69190810190612cd8565b6111a1565b005b3480156105c957600080fd5b506105e460048036036105df9190810190612d7c565b6112b9565b6040516105f19190613160565b60405180910390f35b34801561060657600080fd5b5061060f6112d1565b60405161061c919061305a565b60405180910390f35b34801561063157600080fd5b5061064c60048036036106479190810190612cd8565b6112f8565b005b60405180807f4465765a656e5f6d6f7665546f4e657874457069736f64650000000000000000815250601801905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106fc929190612fed565b602060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061074e9190810190612d53565b151561075957600080fd5b61076282611396565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079581611ecd565b50565b60405180807f4465765a656e5f656d657267656e63794368616e676547756573740000000000815250601b019050604051809103902081565b7f2fc30c0260b9c2120dbb43e5716b23b323cb0059511c89856fe497bcaf93cbe060010281565b7f8097db39df04019c8a72c19c6369ebda43741c8e2a45d27badc3e4ff8ecc3d0b60010281565b6000610829612156565b905090565b7ff62293a5f827624aae2cb3ccf2a626acfb00192eb976ac25c0b6fcfe9099f10960010281565b7fc9b51a76ddd807905ae4f432305a7941a6eeed3018a217456051bf48a64b23cc60010281565b60405180807f4465765a656e5f75706461746544616f506172616d73000000000000000000008152506016019050604051809103902081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070160009054906101000a900460ff16905087565b60405180807f4465765a656e5f73656c6563744e657874486f73740000000000000000000000815250601501905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a46929190612fed565b602060405180830381600087803b158015610a6057600080fd5b505af1158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a989190810190612d53565b1515610aa357600080fd5b610aac826121af565b5050565b60405180807f4465765a656e5f6368616e676547756573740000000000000000000000000000815250601201905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b5e929190612fed565b602060405180830381600087803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb09190810190612d53565b1515610bbb57600080fd5b610bc482612277565b5050565b60405180807f4465765a656e5f73656c6563744e657874486f737400000000000000000000008152506015019050604051809103902081565b610c09612472565b565b7f91a208a4a1aa03cdcf19de90fdf6add60ea8d103a63e151f2b189cc77dfc8cf760010281565b7f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010281565b60405180807f4465765a656e5f776974686472617745746865720000000000000000000000008152506014019050604051809103902081565b60007f37a4fd01aee7abe5c04a0f0246d9796a5769b74e4fb6f300b753f94715ceda6060405160405180910390a160003414151515610cd057600080fd5b600b60007f1d18f55c54a96a26d4aaa596d526372f95c7cef9f217e9bbe766cea1685969076001026000191660001916815260200190815260200160002054670de0b6b3a76400003402811515610d2357fe5b04905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d9e9190612f03565b602060405180830381600087803b158015610db857600080fd5b505af1158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df09190810190612e22565b10151515610dfd57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e76929190613016565b602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec89190810190612d53565b5050565b60405180807f4465765a656e5f75706461746544616f506172616d7300000000000000000000815250601601905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f7a929190612fed565b602060405180830381600087803b158015610f9457600080fd5b505af1158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fcc9190810190612d53565b1515610fd757600080fd5b610fe183836124f3565b505050565b60405180807f4465765a656e5f6d6f7665546f4e657874457069736f646500000000000000008152506018019050604051809103902081565b60405180807f4465765a656e5f77697468647261774574686572000000000000000000000000815250601401905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110cd929190612fed565b602060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061111f9190810190612d53565b151561112a57600080fd5b61113382612550565b5050565b60405180807f4465765a656e5f6368616e6765477565737400000000000000000000000000008152506012019050604051809103902081565b7f9cf4c579edc10b766d99450c69f14a06144239d4923ded8d12e0a7d6ec69a04860010281565b61119f610c92565b565b60405180807f4465765a656e5f656d657267656e63794368616e676547756573740000000000815250601b01905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161124f929190612fed565b602060405180830381600087803b15801561126957600080fd5b505af115801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112a19190810190612d53565b15156112ac57600080fd5b6112b5826125e8565b5050565b600b6020528060005260406000206000915090505481565b7f1d18f55c54a96a26d4aaa596d526372f95c7cef9f217e9bbe766cea16859690760010281565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135357600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000807f7094f422de4ba2659b3ef619ecd18003fb4be795afb7fe1372e165d84b4e5409856040516113cb919061303f565b60405180910390a16113db612156565b15156113e657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007fc9b51a76ddd807905ae4f432305a7941a6eeed3018a217456051bf48a64b23cc60010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114c093929190612fb6565b600060405180830381600087803b1580156114da57600080fd5b505af11580156114ee573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007ff62293a5f827624aae2cb3ccf2a626acfb00192eb976ac25c0b6fcfe9099f10960010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115cc93929190612fb6565b600060405180830381600087803b1580156115e657600080fd5b505af11580156115fa573d6000803e3d6000fd5b50505050600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003600501819055504260036006018190555084156118a5576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f9cf4c579edc10b766d99450c69f14a06144239d4923ded8d12e0a7d6ec69a04860010260001916600019168152602001908152602001600020546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161187293929190612fb6565b600060405180830381600087803b15801561188c57600080fd5b505af11580156118a0573d6000803e3d6000fd5b505050505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f91a208a4a1aa03cdcf19de90fdf6add60ea8d103a63e151f2b189cc77dfc8cf760010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119a493929190612fb6565b600060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef9c82266040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a4a90613112565b602060405180830381600087803b158015611a6457600080fd5b505af1158015611a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a9c9190810190612e22565b935060018410151515611aab57fe5b60018403600b60007f8097db39df04019c8a72c19c6369ebda43741c8e2a45d27badc3e4ff8ecc3d0b6001026000191660001916815260200190815260200160002054811515611af757fe5b049250600090505b83811015611d05576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed28c035826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b7d9190613132565b602060405180830381600087803b158015611b9757600080fd5b505af1158015611bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bcf9190810190612d01565b9150600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515611cfa576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cc793929190612fb6565b600060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050505b806001019050611aff565b848015611d225750600360070160009054906101000a900460ff16155b15611e5a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e02929190613016565b602060405180830381600087803b158015611e1c57600080fd5b505af1158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e549190810190612d53565b50611ea8565b60006003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ea757611ea6612698565b5b5b6000600360070160006101000a81548160ff0219169083151502179055505050505050565b7fbd68938576ee5ae65475f13b5586228c07d89250cfc3f9c16c324a17157686eb81604051611efc91906130f0565b60405180910390a16005600360050154101515611f1857600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f919190612f03565b602060405180830381600087803b158015611fab57600080fd5b505af1158015611fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe39190810190612e22565b14151515611ff057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663423c3a48600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600b60007f2fc30c0260b9c2120dbb43e5716b23b323cb0059511c89856fe497bcaf93cbe060010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120ca939291906130b9565b600060405180830381600087803b1580156120e457600080fd5b505af11580156120f8573d6000803e3d6000fd5b50505050600360040181908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061213c929190612b51565b505060036005016000815480929190600101919050555050565b60007fc39a03bef078aad2cc206959ecb62b94c746780d2e9da79694332081ecc0392a60405160405180910390a16000600360060154141561219b57600190506121ac565b4262093a8060036006015401111590505b90565b7f759e8ce613b23b25a4b30b86470dd5e31746c314c41f0aa90f20594d338a8897816040516121de9190612f03565b60405180910390a1600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600014151561223057600080fd5b80600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007fadeb1da144b71a0e1e5175f16e68146daf916560a4da4e3d71536684ada44313826040516122a89190612f03565b60405180910390a1600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000141515156122fb57600080fd5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061232c826127d2565b600360070160009054906101000a900460ff16151561245057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123fc929190613016565b602060405180830381600087803b15801561241657600080fd5b505af115801561242a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061244e9190810190612d53565b505b6000600360070160006101000a81548160ff0219169083151502179055505050565b7fc2cbfcb3b4b42c75a99bb19371e4dad7655b3ebac98704718a5f6b943b8f567560405160405180910390a1600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660001415156124e857600080fd5b6124f1336127d2565b565b7ff04ee4a7c5e0072de141f68fbec4aba82bfa0866ce04ad1f286b8602e0cbcfa68282604051612524929190613075565b60405180910390a180600b60008460001916600019168152602001908152602001600020819055505050565b7f21d39a02fe7ea0f80ee46ebdc1ec80f10d3b9836d43471104563d680ff71526b8160405161257f9190612f03565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156125e4573d6000803e3d6000fd5b5050565b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561263357600080fd5b80600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360070160006101000a81548160ff02191690831515021790555050565b7f8c720b1671735d857a9d2b27c9e78336dbd2be8e9977a2a1febc1904603e6fa360405160405180910390a16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663423c3a48600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161279e939291906130b9565b600060405180830381600087803b1580156127b857600080fd5b505af11580156127cc573d6000803e3d6000fd5b50505050565b600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c46001026000191660001916815260200190815260200160002054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128889190612f03565b602060405180830381600087803b1580156128a257600080fd5b505af11580156128b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128da9190810190612e22565b101515156128e757600080fd5b600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c46001026000191660001916815260200190815260200160002054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161299f929190612f1e565b602060405180830381600087803b1580156129b957600080fd5b505af11580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129f19190810190612e22565b101515156129fe57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ab793929190612fb6565b602060405180830381600087803b158015612ad157600080fd5b505af1158015612ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b099190810190612d53565b5080600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b9257805160ff1916838001178555612bc0565b82800160010185558215612bc0579182015b82811115612bbf578251825591602001919060010190612ba4565b5b509050612bcd9190612bd1565b5090565b612bf391905b80821115612bef576000816000905550600101612bd7565b5090565b90565b6000612c02823561321f565b905092915050565b6000612c16825161321f565b905092915050565b6000612c2a823561323f565b905092915050565b6000612c3e825161323f565b905092915050565b6000612c52823561324b565b905092915050565b600082601f8301121515612c6d57600080fd5b8135612c80612c7b826131a8565b61317b565b91508082526020830160208301858383011115612c9c57600080fd5b612ca7838284613271565b50505092915050565b6000612cbc8235613255565b905092915050565b6000612cd08251613255565b905092915050565b600060208284031215612cea57600080fd5b6000612cf884828501612bf6565b91505092915050565b600060208284031215612d1357600080fd5b6000612d2184828501612c0a565b91505092915050565b600060208284031215612d3c57600080fd5b6000612d4a84828501612c1e565b91505092915050565b600060208284031215612d6557600080fd5b6000612d7384828501612c32565b91505092915050565b600060208284031215612d8e57600080fd5b6000612d9c84828501612c46565b91505092915050565b60008060408385031215612db857600080fd5b6000612dc685828601612c46565b9250506020612dd785828601612cb0565b9150509250929050565b600060208284031215612df357600080fd5b600082013567ffffffffffffffff811115612e0d57600080fd5b612e1984828501612c5a565b91505092915050565b600060208284031215612e3457600080fd5b6000612e4284828501612cc4565b91505092915050565b612e54816131df565b82525050565b612e63816131ff565b82525050565b612e728161320b565b82525050565b612e818161325f565b82525050565b6000612e92826131d4565b808452612ea6816020860160208601613280565b612eaf816132b3565b602085010191505092915050565b6000600a82527f4465765a656e5465616d000000000000000000000000000000000000000000006020830152604082019050919050565b612efd81613215565b82525050565b6000602082019050612f186000830184612e4b565b92915050565b6000604082019050612f336000830185612e4b565b612f406020830184612e4b565b9392505050565b600060e082019050612f5c600083018a612e4b565b612f696020830189612e4b565b612f766040830188612e4b565b612f836060830187612e4b565b612f906080830186612ef4565b612f9d60a0830185612ef4565b612faa60c0830184612e5a565b98975050505050505050565b6000606082019050612fcb6000830186612e4b565b612fd86020830185612e4b565b612fe56040830184612ef4565b949350505050565b60006040820190506130026000830185612e4b565b61300f6020830184612e69565b9392505050565b600060408201905061302b6000830185612e4b565b6130386020830184612ef4565b9392505050565b60006020820190506130546000830184612e5a565b92915050565b600060208201905061306f6000830184612e69565b92915050565b600060408201905061308a6000830185612e69565b6130976020830184612ef4565b9392505050565b60006020820190506130b36000830184612e78565b92915050565b60006060820190506130ce6000830186612e78565b6130db6020830185612e4b565b6130e86040830184612ef4565b949350505050565b6000602082019050818103600083015261310a8184612e87565b905092915050565b6000602082019050818103600083015261312b81612ebd565b9050919050565b6000604082019050818103600083015261314b81612ebd565b905061315a6020830184612ef4565b92915050565b60006020820190506131756000830184612ef4565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561319e57600080fd5b8060405250919050565b600067ffffffffffffffff8211156131bf57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600061326a826131df565b9050919050565b82818337600083830152505050565b60005b8381101561329e578082015181840152602081019050613283565b838111156132ad576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820af65bfb0042bf0b168108c73f727faf152357046d0c6b49dfbf3f5d4049c8e396c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063153951971461019257806329034a5c146101bb5780632ce252bf146101e65780632fafa7501461020f57806338ed6d5a1461023a57806341be44f9146102655780634d7e0ec4146102905780635651a44f146102bb5780635eda4f24146102e657806361d71edf14610311578063720948e41461033c5780637633b4ed146103675780637b92207d1461039857806382547801146103c1578063877d4522146103ea5780638beeb48814610415578063929abf841461042c5780639827e172146104575780639b66e0d6146104825780639b9db5d6146104ad5780639f30490a146104b7578063aed60563146104e0578063af933b571461050b578063c57521ec14610534578063caaa93d31461055f578063d0febe4c1461058a578063d6263c4014610594578063dc6ab527146105bd578063e2b13553146105fa578063fa34c84e14610625575b34801561018c57600080fd5b50600080fd5b34801561019e57600080fd5b506101b960048036036101b49190810190612d2a565b61064e565b005b3480156101c757600080fd5b506101d0610766565b6040516101dd919061309e565b60405180910390f35b3480156101f257600080fd5b5061020d60048036036102089190810190612de1565b61078c565b005b34801561021b57600080fd5b50610224610798565b604051610231919061305a565b60405180910390f35b34801561024657600080fd5b5061024f6107d1565b60405161025c919061305a565b60405180910390f35b34801561027157600080fd5b5061027a6107f8565b604051610287919061305a565b60405180910390f35b34801561029c57600080fd5b506102a561081f565b6040516102b2919061303f565b60405180910390f35b3480156102c757600080fd5b506102d061082e565b6040516102dd919061305a565b60405180910390f35b3480156102f257600080fd5b506102fb610855565b604051610308919061305a565b60405180910390f35b34801561031d57600080fd5b5061032661087c565b604051610333919061305a565b60405180910390f35b34801561034857600080fd5b506103516108b5565b60405161035e919061309e565b60405180910390f35b34801561037357600080fd5b5061037c6108db565b60405161038f9796959493929190612f47565b60405180910390f35b3480156103a457600080fd5b506103bf60048036036103ba9190810190612cd8565b610998565b005b3480156103cd57600080fd5b506103e860048036036103e39190810190612cd8565b610ab0565b005b3480156103f657600080fd5b506103ff610bc8565b60405161040c919061305a565b60405180910390f35b34801561042157600080fd5b5061042a610c01565b005b34801561043857600080fd5b50610441610c0b565b60405161044e919061305a565b60405180910390f35b34801561046357600080fd5b5061046c610c32565b604051610479919061305a565b60405180910390f35b34801561048e57600080fd5b50610497610c59565b6040516104a4919061305a565b60405180910390f35b6104b5610c92565b005b3480156104c357600080fd5b506104de60048036036104d99190810190612da5565b610ecc565b005b3480156104ec57600080fd5b506104f5610fe6565b604051610502919061305a565b60405180910390f35b34801561051757600080fd5b50610532600480360361052d9190810190612cd8565b61101f565b005b34801561054057600080fd5b50610549611137565b604051610556919061305a565b60405180910390f35b34801561056b57600080fd5b50610574611170565b604051610581919061305a565b60405180910390f35b610592611197565b005b3480156105a057600080fd5b506105bb60048036036105b69190810190612cd8565b6111a1565b005b3480156105c957600080fd5b506105e460048036036105df9190810190612d7c565b6112b9565b6040516105f19190613160565b60405180910390f35b34801561060657600080fd5b5061060f6112d1565b60405161061c919061305a565b60405180910390f35b34801561063157600080fd5b5061064c60048036036106479190810190612cd8565b6112f8565b005b60405180807f4465765a656e5f6d6f7665546f4e657874457069736f64650000000000000000815250601801905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106fc929190612fed565b602060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061074e9190810190612d53565b151561075957600080fd5b61076282611396565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079581611ecd565b50565b60405180807f4465765a656e5f656d657267656e63794368616e676547756573740000000000815250601b019050604051809103902081565b7f2fc30c0260b9c2120dbb43e5716b23b323cb0059511c89856fe497bcaf93cbe060010281565b7f8097db39df04019c8a72c19c6369ebda43741c8e2a45d27badc3e4ff8ecc3d0b60010281565b6000610829612156565b905090565b7ff62293a5f827624aae2cb3ccf2a626acfb00192eb976ac25c0b6fcfe9099f10960010281565b7fc9b51a76ddd807905ae4f432305a7941a6eeed3018a217456051bf48a64b23cc60010281565b60405180807f4465765a656e5f75706461746544616f506172616d73000000000000000000008152506016019050604051809103902081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070160009054906101000a900460ff16905087565b60405180807f4465765a656e5f73656c6563744e657874486f73740000000000000000000000815250601501905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a46929190612fed565b602060405180830381600087803b158015610a6057600080fd5b505af1158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a989190810190612d53565b1515610aa357600080fd5b610aac826121af565b5050565b60405180807f4465765a656e5f6368616e676547756573740000000000000000000000000000815250601201905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b5e929190612fed565b602060405180830381600087803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb09190810190612d53565b1515610bbb57600080fd5b610bc482612277565b5050565b60405180807f4465765a656e5f73656c6563744e657874486f737400000000000000000000008152506015019050604051809103902081565b610c09612472565b565b7f91a208a4a1aa03cdcf19de90fdf6add60ea8d103a63e151f2b189cc77dfc8cf760010281565b7f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010281565b60405180807f4465765a656e5f776974686472617745746865720000000000000000000000008152506014019050604051809103902081565b60007f37a4fd01aee7abe5c04a0f0246d9796a5769b74e4fb6f300b753f94715ceda6060405160405180910390a160003414151515610cd057600080fd5b600b60007f1d18f55c54a96a26d4aaa596d526372f95c7cef9f217e9bbe766cea1685969076001026000191660001916815260200190815260200160002054670de0b6b3a76400003402811515610d2357fe5b04905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d9e9190612f03565b602060405180830381600087803b158015610db857600080fd5b505af1158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610df09190810190612e22565b10151515610dfd57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e76929190613016565b602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ec89190810190612d53565b5050565b60405180807f4465765a656e5f75706461746544616f506172616d7300000000000000000000815250601601905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f7a929190612fed565b602060405180830381600087803b158015610f9457600080fd5b505af1158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fcc9190810190612d53565b1515610fd757600080fd5b610fe183836124f3565b505050565b60405180807f4465765a656e5f6d6f7665546f4e657874457069736f646500000000000000008152506018019050604051809103902081565b60405180807f4465765a656e5f77697468647261774574686572000000000000000000000000815250601401905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110cd929190612fed565b602060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061111f9190810190612d53565b151561112a57600080fd5b61113382612550565b5050565b60405180807f4465765a656e5f6368616e6765477565737400000000000000000000000000008152506012019050604051809103902081565b7f9cf4c579edc10b766d99450c69f14a06144239d4923ded8d12e0a7d6ec69a04860010281565b61119f610c92565b565b60405180807f4465765a656e5f656d657267656e63794368616e676547756573740000000000815250601b01905060405180910390206000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322e320f733836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161124f929190612fed565b602060405180830381600087803b15801561126957600080fd5b505af115801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112a19190810190612d53565b15156112ac57600080fd5b6112b5826125e8565b5050565b600b6020528060005260406000206000915090505481565b7f1d18f55c54a96a26d4aaa596d526372f95c7cef9f217e9bbe766cea16859690760010281565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135357600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000807f7094f422de4ba2659b3ef619ecd18003fb4be795afb7fe1372e165d84b4e5409856040516113cb919061303f565b60405180910390a16113db612156565b15156113e657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007fc9b51a76ddd807905ae4f432305a7941a6eeed3018a217456051bf48a64b23cc60010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114c093929190612fb6565b600060405180830381600087803b1580156114da57600080fd5b505af11580156114ee573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007ff62293a5f827624aae2cb3ccf2a626acfb00192eb976ac25c0b6fcfe9099f10960010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115cc93929190612fb6565b600060405180830381600087803b1580156115e657600080fd5b505af11580156115fa573d6000803e3d6000fd5b50505050600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006003600501819055504260036006018190555084156118a5576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f9cf4c579edc10b766d99450c69f14a06144239d4923ded8d12e0a7d6ec69a04860010260001916600019168152602001908152602001600020546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161187293929190612fb6565b600060405180830381600087803b15801561188c57600080fd5b505af11580156118a0573d6000803e3d6000fd5b505050505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f91a208a4a1aa03cdcf19de90fdf6add60ea8d103a63e151f2b189cc77dfc8cf760010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119a493929190612fb6565b600060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef9c82266040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a4a90613112565b602060405180830381600087803b158015611a6457600080fd5b505af1158015611a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a9c9190810190612e22565b935060018410151515611aab57fe5b60018403600b60007f8097db39df04019c8a72c19c6369ebda43741c8e2a45d27badc3e4ff8ecc3d0b6001026000191660001916815260200190815260200160002054811515611af757fe5b049250600090505b83811015611d05576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed28c035826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b7d9190613132565b602060405180830381600087803b158015611b9757600080fd5b505af1158015611bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bcf9190810190612d01565b9150600360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515611cfa576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632459bac8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cc793929190612fb6565b600060405180830381600087803b158015611ce157600080fd5b505af1158015611cf5573d6000803e3d6000fd5b505050505b806001019050611aff565b848015611d225750600360070160009054906101000a900460ff16155b15611e5a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e02929190613016565b602060405180830381600087803b158015611e1c57600080fd5b505af1158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e549190810190612d53565b50611ea8565b60006003800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ea757611ea6612698565b5b5b6000600360070160006101000a81548160ff0219169083151502179055505050505050565b7fbd68938576ee5ae65475f13b5586228c07d89250cfc3f9c16c324a17157686eb81604051611efc91906130f0565b60405180910390a16005600360050154101515611f1857600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f919190612f03565b602060405180830381600087803b158015611fab57600080fd5b505af1158015611fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fe39190810190612e22565b14151515611ff057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663423c3a48600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600b60007f2fc30c0260b9c2120dbb43e5716b23b323cb0059511c89856fe497bcaf93cbe060010260001916600019168152602001908152602001600020546040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120ca939291906130b9565b600060405180830381600087803b1580156120e457600080fd5b505af11580156120f8573d6000803e3d6000fd5b50505050600360040181908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061213c929190612b51565b505060036005016000815480929190600101919050555050565b60007fc39a03bef078aad2cc206959ecb62b94c746780d2e9da79694332081ecc0392a60405160405180910390a16000600360060154141561219b57600190506121ac565b4262093a8060036006015401111590505b90565b7f759e8ce613b23b25a4b30b86470dd5e31746c314c41f0aa90f20594d338a8897816040516121de9190612f03565b60405180910390a1600360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600014151561223057600080fd5b80600360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007fadeb1da144b71a0e1e5175f16e68146daf916560a4da4e3d71536684ada44313826040516122a89190612f03565b60405180910390a1600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000141515156122fb57600080fd5b600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061232c826127d2565b600360070160009054906101000a900460ff16151561245057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123fc929190613016565b602060405180830381600087803b15801561241657600080fd5b505af115801561242a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061244e9190810190612d53565b505b6000600360070160006101000a81548160ff0219169083151502179055505050565b7fc2cbfcb3b4b42c75a99bb19371e4dad7655b3ebac98704718a5f6b943b8f567560405160405180910390a1600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660001415156124e857600080fd5b6124f1336127d2565b565b7ff04ee4a7c5e0072de141f68fbec4aba82bfa0866ce04ad1f286b8602e0cbcfa68282604051612524929190613075565b60405180910390a180600b60008460001916600019168152602001908152602001600020819055505050565b7f21d39a02fe7ea0f80ee46ebdc1ec80f10d3b9836d43471104563d680ff71526b8160405161257f9190612f03565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156125e4573d6000803e3d6000fd5b5050565b6000600360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561263357600080fd5b80600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360070160006101000a81548160ff02191690831515021790555050565b7f8c720b1671735d857a9d2b27c9e78336dbd2be8e9977a2a1febc1904603e6fa360405160405180910390a16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663423c3a48600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161279e939291906130b9565b600060405180830381600087803b1580156127b857600080fd5b505af11580156127cc573d6000803e3d6000fd5b50505050565b600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c46001026000191660001916815260200190815260200160002054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128889190612f03565b602060405180830381600087803b1580156128a257600080fd5b505af11580156128b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128da9190810190612e22565b101515156128e757600080fd5b600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c46001026000191660001916815260200190815260200160002054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e83306040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161299f929190612f1e565b602060405180830381600087803b1580156129b957600080fd5b505af11580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129f19190810190612e22565b101515156129fe57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230600b60007f3016d4c48f6a1e0a92b321085915d5914a9ab2c36783443e2b6066054b37f7c460010260001916600019168152602001908152602001600020546040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ab793929190612fb6565b602060405180830381600087803b158015612ad157600080fd5b505af1158015612ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b099190810190612d53565b5080600360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b9257805160ff1916838001178555612bc0565b82800160010185558215612bc0579182015b82811115612bbf578251825591602001919060010190612ba4565b5b509050612bcd9190612bd1565b5090565b612bf391905b80821115612bef576000816000905550600101612bd7565b5090565b90565b6000612c02823561321f565b905092915050565b6000612c16825161321f565b905092915050565b6000612c2a823561323f565b905092915050565b6000612c3e825161323f565b905092915050565b6000612c52823561324b565b905092915050565b600082601f8301121515612c6d57600080fd5b8135612c80612c7b826131a8565b61317b565b91508082526020830160208301858383011115612c9c57600080fd5b612ca7838284613271565b50505092915050565b6000612cbc8235613255565b905092915050565b6000612cd08251613255565b905092915050565b600060208284031215612cea57600080fd5b6000612cf884828501612bf6565b91505092915050565b600060208284031215612d1357600080fd5b6000612d2184828501612c0a565b91505092915050565b600060208284031215612d3c57600080fd5b6000612d4a84828501612c1e565b91505092915050565b600060208284031215612d6557600080fd5b6000612d7384828501612c32565b91505092915050565b600060208284031215612d8e57600080fd5b6000612d9c84828501612c46565b91505092915050565b60008060408385031215612db857600080fd5b6000612dc685828601612c46565b9250506020612dd785828601612cb0565b9150509250929050565b600060208284031215612df357600080fd5b600082013567ffffffffffffffff811115612e0d57600080fd5b612e1984828501612c5a565b91505092915050565b600060208284031215612e3457600080fd5b6000612e4284828501612cc4565b91505092915050565b612e54816131df565b82525050565b612e63816131ff565b82525050565b612e728161320b565b82525050565b612e818161325f565b82525050565b6000612e92826131d4565b808452612ea6816020860160208601613280565b612eaf816132b3565b602085010191505092915050565b6000600a82527f4465765a656e5465616d000000000000000000000000000000000000000000006020830152604082019050919050565b612efd81613215565b82525050565b6000602082019050612f186000830184612e4b565b92915050565b6000604082019050612f336000830185612e4b565b612f406020830184612e4b565b9392505050565b600060e082019050612f5c600083018a612e4b565b612f696020830189612e4b565b612f766040830188612e4b565b612f836060830187612e4b565b612f906080830186612ef4565b612f9d60a0830185612ef4565b612faa60c0830184612e5a565b98975050505050505050565b6000606082019050612fcb6000830186612e4b565b612fd86020830185612e4b565b612fe56040830184612ef4565b949350505050565b60006040820190506130026000830185612e4b565b61300f6020830184612e69565b9392505050565b600060408201905061302b6000830185612e4b565b6130386020830184612ef4565b9392505050565b60006020820190506130546000830184612e5a565b92915050565b600060208201905061306f6000830184612e69565b92915050565b600060408201905061308a6000830185612e69565b6130976020830184612ef4565b9392505050565b60006020820190506130b36000830184612e78565b92915050565b60006060820190506130ce6000830186612e78565b6130db6020830185612e4b565b6130e86040830184612ef4565b949350505050565b6000602082019050818103600083015261310a8184612e87565b905092915050565b6000602082019050818103600083015261312b81612ebd565b9050919050565b6000604082019050818103600083015261314b81612ebd565b905061315a6020830184612ef4565b92915050565b60006020820190506131756000830184612ef4565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561319e57600080fd5b8060405250919050565b600067ffffffffffffffff8211156131bf57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600061326a826131df565b9050919050565b82818337600083830152505050565b60005b8381101561329e578082015181840152602081019050613283565b838111156132ad576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820af65bfb0042bf0b168108c73f727faf152357046d0c6b49dfbf3f5d4049c8e396c6578706572696d656e74616cf50037",
  "sourceMap": "363:3660:5:-;;;405:102;8:9:-1;5:2;;;30:1;27;20:12;5:2;405:102:5;;;;;;;;;;;;;;;;;;;;;;;;486:8;496:7;4518:8:8;736::20;726:7;;:18;;;;;;;;;;;;;;;;;;748:7;;;;;;;;;;;:19;;;781:4;748:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;748:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;748:39:20;;;;684:107;4558:7:8;4566:1;4558:10;;;;;;;;;;;;;;;;;;4532:11;;:37;;;;;;;;;;;;;;;;;;4597:7;4605:1;4597:10;;;;;;;;;;;;;;;;;;4574:8;;:34;;;;;;;;;;;;;;;;;;4451:162;;405:102:5;;363:3660;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;152:722;;280:3;273:4;265:6;261:17;257:27;250:35;247:2;;;298:1;295;288:12;247:2;328:6;322:13;350:80;365:64;422:6;365:64;;;350:80;;;341:89;;447:5;472:6;465:5;458:21;502:4;494:6;490:17;480:27;;524:4;519:3;515:14;508:21;;577:6;624:3;616:4;608:6;604:17;599:3;595:27;592:36;589:2;;;641:1;638;631:12;589:2;666:1;651:217;676:6;673:1;670:13;651:217;;;734:3;756:48;800:3;788:10;756:48;;;751:3;744:61;828:4;823:3;819:14;812:21;;856:4;851:3;847:14;840:21;;708:160;698:1;695;691:9;686:14;;651:217;;;655:14;240:634;;;;;;;;882:156;;977:56;1025:6;1019:13;977:56;;;968:65;;962:76;;;;;1045:562;;;1219:2;1207:9;1198:7;1194:23;1190:32;1187:2;;;1235:1;1232;1225:12;1187:2;1270:1;1287:81;1360:7;1351:6;1340:9;1336:22;1287:81;;;1277:91;;1249:125;1426:2;1415:9;1411:18;1405:25;1450:18;1442:6;1439:30;1436:2;;;1482:1;1479;1472:12;1436:2;1502:89;1583:7;1574:6;1563:9;1559:22;1502:89;;;1492:99;;1384:213;1181:426;;;;;;1614:158;1708:58;1760:5;1708:58;;;1703:3;1696:71;1690:82;;;1779:235;;1908:2;1897:9;1893:18;1885:26;;1922:82;2001:1;1990:9;1986:17;1977:6;1922:82;;;1879:135;;;;;2021:256;;2083:2;2077:9;2067:19;;2121:4;2113:6;2109:17;2220:6;2208:10;2205:22;2184:18;2172:10;2169:34;2166:62;2163:2;;;2241:1;2238;2231:12;2163:2;2261:10;2257:2;2250:22;2061:216;;;;;2284:258;;2443:18;2435:6;2432:30;2429:2;;;2475:1;2472;2465:12;2429:2;2504:4;2496:6;2492:17;2484:25;;2532:4;2526;2522:15;2514:23;;2366:176;;;;2549:128;;2629:42;2622:5;2618:54;2607:65;;2601:76;;;;2684:128;;2764:42;2757:5;2753:54;2742:65;;2736:76;;;;2819:122;;2905:31;2930:5;2905:31;;;2894:42;;2888:53;;;;2948:136;;3048:31;3073:5;3048:31;;;3035:44;;3029:55;;;;363:3660:5;;;;;;;",
  "deployedSourceMap": "363:3660:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;363:3660:5;4007:8;;;2480:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2480:141:5;;;;;;;;;;;;;;;;;;;1925:27:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1925:27:8;;;;;;;;;;;;;;;;;;;;2946:103:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2946:103:5;;;;;;;;;;;;;;;;;;;2340:97:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2340:97:8;;;;;;;;;;;;;;;;;;;;2798:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2798:110:8;;;;;;;;;;;;;;;;;;;;3385:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3385:123:8;;;;;;;;;;;;;;;;;;;;3827:94:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3827:94:5;;;;;;;;;;;;;;;;;;;;2663:131:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2663:131:8;;;;;;;;;;;;;;;;;;;;2539:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2539:120:8;;;;;;;;;;;;;;;;;;;;1992:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1992:87:8;;;;;;;;;;;;;;;;;;;;1891:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1891:30:8;;;;;;;;;;;;;;;;;;;;1956;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;1371:126:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:126:5;;;;;;;;;;;;;;;;;;;1691:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1691:116:5;;;;;;;;;;;;;;;;;;;2169:85:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2169:85:8;;;;;;;;;;;;;;;;;;;;3228:82:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3228:82:5;;;;;;3146:115:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3146:115:8;;;;;;;;;;;;;;;;;;;;3031:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3031:111:8;;;;;;;;;;;;;;;;;;;;2083:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2083:82:8;;;;;;;;;;;;;;;;;;;;11168:503;;;;;;812:130:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:130:5;;;;;;;;;;;;;;;;;;;2441:92:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2441:92:8;;;;;;;;;;;;;;;;;;;;1105:118:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1105:118:5;;;;;;;;;;;;;;;;;;;2258:78:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2258:78:8;;;;;;;;;;;;;;;;;;;;3265:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3265:116:8;;;;;;;;;;;;;;;;;;;;3632:66:5;;;;;;2071:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2071:146:5;;;;;;;;;;;;;;;;;;;4129:39:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4129:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2912:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2912:115:8;;;;;;;;;;;;;;;;;;;;980:291:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:291:20;;;;;;;;;;;;;;;;;;;2480:141:5;2496:37:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;2577:39:5;2602:13;2577:24;:39::i;:::-;2480:141;;:::o;1925:27:8:-;;;;;;;;;;;;;:::o;2946:103:5:-;3006:38;3036:7;3006:29;:38::i;:::-;2946:103;:::o;2340:97:8:-;2397:40;;;;;;;;;;;;;;;;;;;2340:97;:::o;2798:110::-;2842:66;2798:110;;;:::o;3385:123::-;3442:66;3385:123;;;:::o;3827:94:5:-;3874:4;3892:24;:22;:24::i;:::-;3885:31;;3827:94;:::o;2663:131:8:-;2728:66;2663:131;;;:::o;2539:120::-;2593:66;2539:120;;;:::o;1992:87::-;2044:35;;;;;;;;;;;;;;;;;;;1992:87;:::o;1891:30::-;;;;;;;;;;;;;:::o;1956:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1371:126:5:-;2220:34:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;1460:32:5;1482:9;1460:21;:32::i;:::-;1371:126;;:::o;1691:116::-;2305:31:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;1773:29:5;1795:6;1773:21;:29::i;:::-;1691:116;;:::o;2169:85:8:-;2220:34;;;;;;;;;;;;;;;;;;;2169:85;:::o;3228:82:5:-;3274:31;:29;:31::i;:::-;3228:82::o;3146:115:8:-;3195:66;3146:115;;;:::o;3031:111::-;3076:66;3031:111;;;:::o;2083:82::-;2132:33;;;;;;;;;;;;;;;;;;;2083:82;:::o;11168:503::-;11362:21;11215:25;;;;;;;;;;11266:1;11253:9;:14;;11245:23;;;;;;;;11406:6;:30;2961:66;11413:22;;11406:30;;;;;;;;;;;;;;;;;;11397:6;11387:9;:16;11386:50;;;;;;;;11362:74;;11541:16;11501:11;;;;;;;;;;;:21;;;11531:4;11501:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11501:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11501:36:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11501:36:8;;;;;;;;;:56;;11493:65;;;;;;;;11616:11;;;;;;;;;;;:20;;;11637:10;11649:16;11616:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11616:50:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11616:50:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11616:50:8;;;;;;;;;;11168:503;:::o;812:130:5:-;2044:35:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;906:31:5;922:6;930;906:15;:31::i;:::-;812:130;;;:::o;2441:92:8:-;2496:37;;;;;;;;;;;;;;;;;;;2441:92;:::o;1105:118:5:-;2132:33:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;1189:29:5;1210:7;1189:20;:29::i;:::-;1105:118;;:::o;2258:78:8:-;2305:31;;;;;;;;;;;;;;;;;;;2258:78;:::o;3265:116::-;3315:66;3265:116;;;:::o;3632:66:5:-;3675:18;:16;:18::i;:::-;3632:66::o;2071:146::-;2397:40:8;;;;;;;;;;;;;;;;;;;629:7:20;;;;;;;;;;;:21;;;651:10;663:5;629:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:40:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;629:40:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;629:40:20;;;;;;;;;621:49;;;;;;;;2173:39:5;2205:6;2173:31;:39::i;:::-;2071:146;;:::o;4129:39:8:-;;;;;;;;;;;;;;;;;:::o;2912:115::-;2961:66;2912:115;;;:::o;980:291:20:-;1061:7;;;;;;;;;;;1039:30;;:10;:30;;;1031:39;;;;;;;;1094:11;1075:7;;:31;;;;;;;;;;;;;;;;;;980:291;:::o;7377:2185:8:-;8684:16;8772:14;8853;8876:6;7445:46;7477:13;7445:46;;;;;;;;;;;;;;;7540:18;:16;:18::i;:::-;7532:27;;;;;;;;7783:7;;;;;;;;;;;:19;;;7811:11;;;;;;;;;;;7833:4;7840:6;:35;2593:66;7847:27;;7840:35;;;;;;;;;;;;;;;;;;7783:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7783:93:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7783:93:8;;;;7881:7;;;;;;;;;;;:19;;;7909:8;;;;;;;;;;;7928:4;7935:6;:46;2728:66;7942:38;;7935:46;;;;;;;;;;;;;;;;;;7881:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7881:101:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7881:101:8;;;;8055:11;:24;;;;;;;;;;;;8028:11;:24;;;:51;;;;;;;;;;;;;;;;;;8112:11;:25;;;;;;;;;;;;8084:11;:25;;;:53;;;;;;;;;;;;;;;;;;8169:3;8142:11;:24;;;:30;;;;;;;;;;;;;;;;;;8205:3;8177:11;:25;;;:31;;;;;;;;;;;;;;;;;;8237:1;8213:11;:21;;:25;;;;8267:3;8243:11;:21;;:27;;;;8321:13;8318:128;;;8342:7;;;;;;;;;;;:19;;;8370:8;;;;;;;;;;;8381:11;:25;;;;;;;;;;;;8408:6;:31;3315:66;8415:23;;8408:31;;;;;;;;;;;;;;;;;;8342:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8342:98:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8342:98:8;;;;8318:128;8501:7;;;;;;;;;;;:19;;;8529:8;;;;;;;;;;;8540:11;:24;;;;;;;;;;;;8566:6;:30;3195:66;8573:22;;8566:30;;;;;;;;;;;;;;;;;;8501:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8501:96:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8501:96:8;;;;8703:7;;;;;;;;;;;:23;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8703:37:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8703:37:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8703:37:8;;;;;;;;;8684:56;;8765:1;8752:11;:14;;8745:22;;;;;;8845:1;8831:11;:15;8789:6;:38;3442:66;8796:30;;8789:38;;;;;;;;;;;;;;;;;;:58;;;;;;;;8772:75;;8883:1;8876:8;;8872:207;8888:11;8886:1;:13;8872:207;;;8920:7;;;;;;;;;;;:24;;;8959:1;8920:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8920:41:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8920:41:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8920:41:8;;;;;;;;;8911:50;;8978:11;:24;;;;;;;;;;;;8970:32;;:6;:32;;;;8967:107;;;9010:7;;;;;;;;;;;:19;;;9038:8;;;;;;;;;;;9049:6;9057:9;9010:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9010:57:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9010:57:8;;;;8967:107;8901:3;;;;;8872:207;;;9122:13;:46;;;;;9140:11;:28;;;;;;;;;;;;9139:29;9122:46;9119:363;;;9244:11;;;;;;;;;;;:20;;;9265:11;:25;;;;;;;;;;;;9292:6;:26;3076:66;9299:18;;9292:26;;;;;;;;;;;;;;;;;;9244:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9244:75:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9244:75:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9244:75:8;;;;;;;;;;9119:363;;;9441:3;9412:11;:25;;;;;;;;;;;;:32;;;;9409:68;;;9453:17;:15;:17::i;:::-;9409:68;9119:363;9551:5;9520:11;:28;;;:36;;;;;;;;;;;;;;;;;;7377:2185;;;;;:::o;9889:520::-;9958:45;9995:7;9958:45;;;;;;;;;;;;;;;10081:1;10059:11;:21;;;:23;10051:32;;;;;;;;10188:1;10153:11;;;;;;;;;;;:21;;;10175:10;10153:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10153:33:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10153:33:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10153:33:8;;;;;;;;;:36;;10145:45;;;;;;;;10238:7;;;;;;;;;;;:18;;;10257:11;;;;;;;;;;;10270:10;10282:6;:25;2842:66;10289:17;;10282:25;;;;;;;;;;;;;;;;;;10238:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10238:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10238:70:8;;;;10343:11;:19;;10368:7;10343:33;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;10343:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10381:11;:21;;;:23;;;;;;;;;;;;;9889:520;:::o;11800:244::-;11851:4;11867:31;;;;;;;;;;11976:1;11951:11;:21;;;:26;11948:42;;;11986:4;11979:11;;;;11948:42;12036:3;12026:6;12002:11;:21;;;:30;:37;;11995:44;;11800:244;;:::o;5325:265::-;5389:39;5418:9;5389:39;;;;;;;;;;;;;;;5492:11;:24;;;;;;;;;;;;5487:29;;:3;:29;5479:38;;;;;;;;5576:9;5549:11;:24;;;:36;;;;;;;;;;;;;;;;;;5325:265;:::o;6011:594::-;6256:17;6072:36;6101:6;6072:36;;;;;;;;;;;;;;;6172:11;:25;;;;;;;;;;;;6165:32;;:3;:32;;6157:41;;;;;;;;6276:11;:25;;;;;;;;;;;;6256:45;;6334:17;6344:6;6334:9;:17::i;:::-;6429:11;:28;;;;;;;;;;;;6428:29;6425:105;;;6465:11;;;;;;;;;;;:20;;;6486:9;6497:6;:26;3076:66;6504:18;;6497:26;;;;;;;;;;;;;;;;;;6465:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6465:59:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6465:59:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6465:59:8;;;;;;;;;;6425:105;6595:5;6564:11;:28;;;:36;;;;;;;;;;;;;;;;;;6011:594;;:::o;10588:258::-;10642:38;;;;;;;;;;10747:11;:25;;;;;;;;;;;;10740:32;;:3;:32;10732:41;;;;;;;;10820:21;10830:10;10820:9;:21::i;:::-;10588:258::o;4818:125::-;4886:24;4895:6;4903;4886:24;;;;;;;;;;;;;;;;4932:6;4915;:14;4922:6;4915:14;;;;;;;;;;;;;;;;;:23;;;;4818:125;;:::o;5012:260::-;5073:36;5101:7;5073:36;;;;;;;;;;;;;;;5228:7;:16;;:39;5253:4;5245:21;;;5228:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5228:39:8;5012:260;:::o;6808:364::-;7014:3;6985:11;:25;;;;;;;;;;;;:32;;;;6977:41;;;;;;;;7081:6;7053:11;:25;;;:34;;;;;;;;;;;;;;;;;;7163:4;7132:11;:28;;;:35;;;;;;;;;;;;;;;;;;6808:364;:::o;5655:162::-;5702:30;;;;;;;;;;5738:7;;;;;;;;;;;:18;;;5757:11;;;;;;;;;;;5778:4;5785:6;:26;3076:66;5792:18;;5785:26;;;;;;;;;;;;;;;;;;5738:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5738:74:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5738:74:8;;;;5655:162::o;12500:608::-;12690:6;:26;3076:66;12697:18;;12690:26;;;;;;;;;;;;;;;;;;12657:11;;;;;;;;;;;:21;;;12679:6;12657:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12657:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12657:29:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12657:29:8;;;;;;;;;:59;;12649:68;;;;;;;;12857:6;:26;3076:66;12864:18;;12857:26;;;;;;;;;;;;;;;;;;12809:11;;;;;;;;;;;:21;;;12831:6;12847:4;12809:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12809:44:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12809:44:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12809:44:8;;;;;;;;;:74;;12801:83;;;;;;;;12959:11;;;;;;;;;;;:24;;;12984:6;13000:4;13007:6;:26;3076:66;13014:18;;13007:26;;;;;;;;;;;;;;;;;;12959:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12959:75:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12959:75:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12959:75:8;;;;;;;;;;13097:6;13069:11;:25;;;:34;;;;;;;;;;;;;;;;;;12500:608;:::o;363:3660:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:122;;208:39;239:6;233:13;208:39;;;199:48;;193:59;;;;;259:112;;323:43;358:6;345:20;323:43;;;314:52;;308:63;;;;;378:116;;453:36;481:6;475:13;453:36;;;444:45;;438:56;;;;;501:118;;568:46;606:6;593:20;568:46;;;559:55;;553:66;;;;;627:442;;729:3;722:4;714:6;710:17;706:27;699:35;696:2;;;747:1;744;737:12;696:2;784:6;771:20;806:65;821:49;863:6;821:49;;;806:65;;;797:74;;891:6;884:5;877:21;927:4;919:6;915:17;960:4;953:5;949:16;995:3;986:6;981:3;977:16;974:25;971:2;;;1012:1;1009;1002:12;971:2;1022:41;1056:6;1051:3;1046;1022:41;;;689:380;;;;;;;;1077:118;;1144:46;1182:6;1169:20;1144:46;;;1135:55;;1129:66;;;;;1202:122;;1280:39;1311:6;1305:13;1280:39;;;1271:48;;1265:59;;;;;1331:241;;1435:2;1423:9;1414:7;1410:23;1406:32;1403:2;;;1451:1;1448;1441:12;1403:2;1486:1;1503:53;1548:7;1539:6;1528:9;1524:22;1503:53;;;1493:63;;1465:97;1397:175;;;;;1579:263;;1694:2;1682:9;1673:7;1669:23;1665:32;1662:2;;;1710:1;1707;1700:12;1662:2;1745:1;1762:64;1818:7;1809:6;1798:9;1794:22;1762:64;;;1752:74;;1724:108;1656:186;;;;;1849:235;;1950:2;1938:9;1929:7;1925:23;1921:32;1918:2;;;1966:1;1963;1956:12;1918:2;2001:1;2018:50;2060:7;2051:6;2040:9;2036:22;2018:50;;;2008:60;;1980:94;1912:172;;;;;2091:257;;2203:2;2191:9;2182:7;2178:23;2174:32;2171:2;;;2219:1;2216;2209:12;2171:2;2254:1;2271:61;2324:7;2315:6;2304:9;2300:22;2271:61;;;2261:71;;2233:105;2165:183;;;;;2355:241;;2459:2;2447:9;2438:7;2434:23;2430:32;2427:2;;;2475:1;2472;2465:12;2427:2;2510:1;2527:53;2572:7;2563:6;2552:9;2548:22;2527:53;;;2517:63;;2489:97;2421:175;;;;;2603:366;;;2724:2;2712:9;2703:7;2699:23;2695:32;2692:2;;;2740:1;2737;2730:12;2692:2;2775:1;2792:53;2837:7;2828:6;2817:9;2813:22;2792:53;;;2782:63;;2754:97;2882:2;2900:53;2945:7;2936:6;2925:9;2921:22;2900:53;;;2890:63;;2861:98;2686:283;;;;;;2976:347;;3090:2;3078:9;3069:7;3065:23;3061:32;3058:2;;;3106:1;3103;3096:12;3058:2;3169:1;3158:9;3154:17;3141:31;3192:18;3184:6;3181:30;3178:2;;;3224:1;3221;3214:12;3178:2;3244:63;3299:7;3290:6;3279:9;3275:22;3244:63;;;3234:73;;3120:193;3052:271;;;;;3330:263;;3445:2;3433:9;3424:7;3420:23;3416:32;3413:2;;;3461:1;3458;3451:12;3413:2;3496:1;3513:64;3569:7;3560:6;3549:9;3545:22;3513:64;;;3503:74;;3475:108;3407:186;;;;;3600:110;3673:31;3698:5;3673:31;;;3668:3;3661:44;3655:55;;;3717:101;3784:28;3806:5;3784:28;;;3779:3;3772:41;3766:52;;;3825:110;3898:31;3923:5;3898:31;;;3893:3;3886:44;3880:55;;;3942:158;4036:58;4088:5;4036:58;;;4031:3;4024:71;4018:82;;;4107:300;;4209:39;4242:5;4209:39;;;4265:6;4260:3;4253:19;4277:63;4333:6;4326:4;4321:3;4317:14;4310:4;4303:5;4299:16;4277:63;;;4372:29;4394:6;4372:29;;;4365:4;4360:3;4356:14;4352:50;4345:57;;4189:218;;;;;;4415:296;;4570:2;4565:3;4558:15;4607:66;4602:2;4597:3;4593:12;4586:88;4702:2;4697:3;4693:12;4686:19;;4551:160;;;;4719:110;4792:31;4817:5;4792:31;;;4787:3;4780:44;4774:55;;;4836:193;;4944:2;4933:9;4929:18;4921:26;;4958:61;5016:1;5005:9;5001:17;4992:6;4958:61;;;4915:114;;;;;5036:294;;5172:2;5161:9;5157:18;5149:26;;5186:61;5244:1;5233:9;5229:17;5220:6;5186:61;;;5258:62;5316:2;5305:9;5301:18;5292:6;5258:62;;;5143:187;;;;;;5337:791;;5607:3;5596:9;5592:19;5584:27;;5622:61;5680:1;5669:9;5665:17;5656:6;5622:61;;;5694:62;5752:2;5741:9;5737:18;5728:6;5694:62;;;5767;5825:2;5814:9;5810:18;5801:6;5767:62;;;5840;5898:2;5887:9;5883:18;5874:6;5840:62;;;5913:63;5971:3;5960:9;5956:19;5947:6;5913:63;;;5987;6045:3;6034:9;6030:19;6021:6;5987:63;;;6061:57;6113:3;6102:9;6098:19;6089:6;6061:57;;;5578:550;;;;;;;;;;;6135:395;;6299:2;6288:9;6284:18;6276:26;;6313:61;6371:1;6360:9;6356:17;6347:6;6313:61;;;6385:62;6443:2;6432:9;6428:18;6419:6;6385:62;;;6458;6516:2;6505:9;6501:18;6492:6;6458:62;;;6270:260;;;;;;;6537:294;;6673:2;6662:9;6658:18;6650:26;;6687:61;6745:1;6734:9;6730:17;6721:6;6687:61;;;6759:62;6817:2;6806:9;6802:18;6793:6;6759:62;;;6644:187;;;;;;6838:294;;6974:2;6963:9;6959:18;6951:26;;6988:61;7046:1;7035:9;7031:17;7022:6;6988:61;;;7060:62;7118:2;7107:9;7103:18;7094:6;7060:62;;;6945:187;;;;;;7139:181;;7241:2;7230:9;7226:18;7218:26;;7255:55;7307:1;7296:9;7292:17;7283:6;7255:55;;;7212:108;;;;;7327:193;;7435:2;7424:9;7420:18;7412:26;;7449:61;7507:1;7496:9;7492:17;7483:6;7449:61;;;7406:114;;;;;7527:294;;7663:2;7652:9;7648:18;7640:26;;7677:61;7735:1;7724:9;7720:17;7711:6;7677:61;;;7749:62;7807:2;7796:9;7792:18;7783:6;7749:62;;;7634:187;;;;;;7828:235;;7957:2;7946:9;7942:18;7934:26;;7971:82;8050:1;8039:9;8035:17;8026:6;7971:82;;;7928:135;;;;;8070:437;;8255:2;8244:9;8240:18;8232:26;;8269:82;8348:1;8337:9;8333:17;8324:6;8269:82;;;8362:62;8420:2;8409:9;8405:18;8396:6;8362:62;;;8435;8493:2;8482:9;8478:18;8469:6;8435:62;;;8226:281;;;;;;;8514;;8642:2;8631:9;8627:18;8619:26;;8692:9;8686:4;8682:20;8678:1;8667:9;8663:17;8656:47;8717:68;8780:4;8771:6;8717:68;;;8709:76;;8613:182;;;;;8802:387;;8983:2;8972:9;8968:18;8960:26;;9033:9;9027:4;9023:20;9019:1;9008:9;9004:17;8997:47;9058:121;9174:4;9058:121;;;9050:129;;8954:235;;;;9196:488;;9405:2;9394:9;9390:18;9382:26;;9455:9;9449:4;9445:20;9441:1;9430:9;9426:17;9419:47;9480:121;9596:4;9480:121;;;9472:129;;9612:62;9670:2;9659:9;9655:18;9646:6;9612:62;;;9376:308;;;;;9691:193;;9799:2;9788:9;9784:18;9776:26;;9813:61;9871:1;9860:9;9856:17;9847:6;9813:61;;;9770:114;;;;;9891:256;;9953:2;9947:9;9937:19;;9991:4;9983:6;9979:17;10090:6;10078:10;10075:22;10054:18;10042:10;10039:34;10036:62;10033:2;;;10111:1;10108;10101:12;10033:2;10131:10;10127:2;10120:22;9931:216;;;;;10154:259;;10298:18;10290:6;10287:30;10284:2;;;10330:1;10327;10320:12;10284:2;10374:4;10370:9;10363:4;10355:6;10351:17;10347:33;10339:41;;10403:4;10397;10393:15;10385:23;;10221:192;;;;10420:92;;10501:5;10495:12;10485:22;;10479:33;;;;10519:128;;10599:42;10592:5;10588:54;10577:65;;10571:76;;;;10654:92;;10734:5;10727:13;10720:21;10709:32;;10703:43;;;;10753:79;;10822:5;10811:16;;10805:27;;;;10839:79;;10908:5;10897:16;;10891:27;;;;10925:128;;11005:42;10998:5;10994:54;10983:65;;10977:76;;;;11060:92;;11140:5;11133:13;11126:21;11115:32;;11109:43;;;;11159:79;;11228:5;11217:16;;11211:27;;;;11245:79;;11314:5;11303:16;;11297:27;;;;11331:136;;11431:31;11456:5;11431:31;;;11418:44;;11412:55;;;;11475:145;11556:6;11551:3;11546;11533:30;11612:1;11603:6;11598:3;11594:16;11587:27;11526:94;;;;11629:268;11694:1;11701:101;11715:6;11712:1;11709:13;11701:101;;;11791:1;11786:3;11782:11;11776:18;11772:1;11767:3;11763:11;11756:39;11737:2;11734:1;11730:10;11725:15;;11701:101;;;11817:6;11814:1;11811:13;11808:2;;;11882:1;11873:6;11868:3;11864:16;11857:27;11808:2;11678:219;;;;;11905:97;;11993:2;11989:7;11984:2;11977:5;11973:14;11969:28;11959:38;;11953:49;;;",
  "source": "pragma solidity ^0.4.24;\r\n\r\n// to enable Params passing to constructor and method\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@thetta/core/contracts/DaoBase.sol\";\r\nimport \"@thetta/core/contracts/DaoBaseImpersonated.sol\";\r\nimport \"@thetta/core/contracts/IDaoBase.sol\";\r\nimport \"@thetta/core/contracts/tokens/StdDaoToken.sol\";\r\n\r\nimport \"./DevZenDaoCore.sol\";\r\n\r\ncontract DevZenDao is DevZenDaoCore {\r\n\r\n\tconstructor(\r\n\t\tIDaoBase _daoBase,\r\n\t\taddress[] _tokens\r\n\t) public DevZenDaoCore(_daoBase, _tokens) {}\r\n\r\n\t// --------------------------------------------- \r\n\t// These methods should be called by DevZen team:\r\n\t//----------------------------------------------\r\n\r\n\t/**\r\n\t * @dev Change the DAO parameters\r\n\t * This method should require voting!\r\n\t * Notice: DevZen_updateDaoParams is a custom action!\r\n\t*/\r\n\tfunction setParam(bytes32 _param, uint _value) public isCanDo(DEV_ZEN_UPDATE_DAO_PARAMS) {\r\n\t\tsuper._setParam(_param, _value);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Withdraw all collected ETH to the _output.\r\n\t * This method should require voting!\r\n\t * Notice: DevZen_withdrawEther is a custom action!\r\n\t*/\r\n\tfunction withdrawEther(address _output) public isCanDo(DEV_ZEN_WITHDRAW_ETHER) {\r\n\t\tsuper._withdrawEther(_output);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Select next episode's host\r\n\t * This method should require voting!\r\n\t * Notice: DevZen_selectNextHost is a custom action!\r\n\t*/\r\n\tfunction selectNextHost(address _nextHost) public isCanDo(DEV_ZEN_SELECT_NEXT_HOST) {\r\n\t\tsuper._selectNextHost(_nextHost);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Changes the guest in \"legal\" way\r\n\t * @param _guest New guest address\r\n\t * When guest is changed via this function we ensure that stake is returned to previous guest.\r\n\t */\r\n\tfunction changeTheGuest(address _guest) public isCanDo(DEV_ZEN_CHANGE_GUEST) {\r\n\t\tsuper._changeTheGuest(_guest);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Set the guest (emergency)\r\n\t * In normal circumst. people should use 'becomeTheNextShowGuest' method. \r\n\t * However, sometimes DevZen team should be able to fix the next guest!\r\n\t * Notice: DevZen_emergencyChangeGuest is a custom action!\r\n\t*/\r\n\tfunction emergency_ChangeTheGuest(address _guest) public isCanDo(DEV_ZEN_EMERGENCY_CHANGE_GUEST) {\r\n\t\tsuper._emergency_ChangeTheGuest(_guest);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Move to next episode\r\n\t * @param _guestHasCome Whether the guest(initual or emergency) has come to the show\r\n\t * Should be called right AFTER the recording of the current episode\r\n\t * Notice: DevZen_moveToNextEpisode is a custom action!\r\n\t*/\r\n\tfunction moveToNextEpisode(bool _guestHasCome) public isCanDo(DEV_ZEN_MOVE_TO_NEXT_EPISODE) {\r\n\t\tsuper._moveToNextEpisode(_guestHasCome);\r\n\t}\r\n\r\n\t// ------------------------------------------------------ \r\n\t// These methods should be called by DevZen token holders\r\n\t// ------------------------------------------------------\r\n\t// Any patron (DevZen token holder) can use DevZen tokens to run ads: Burn k tokens to add your add into the slot (linear, no priority).\r\n\tfunction runAdsInTheNextEpisode(string _adText) public {\r\n\t\tsuper._runAdsInTheNextEpisode(_adText);\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Become the next guest.\r\n\t * To become a guest sender should buy 5 DZT and approve dao to put them at stake. Sender will get back tokens after the show.\r\n\t */\r\n\tfunction becomeTheNextShowGuest() public {\r\n\t\tsuper._becomeTheNextShowGuest();\r\n\t}\r\n\r\n\t// ---------------------------------------------- \r\n\t// These methods should be called by any address:\r\n\t// ----------------------------------------------\r\n\r\n\t/**\r\n\t* @dev Any listener can get a ERC20 “devzen” tokens by sending X ETHers to the DevZen DAO and becomes a “patron” (i.e. token holder).\r\n    */\r\n\tfunction buyTokens() external payable {\r\n\t\tsuper._buyTokens();\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Check that 1 week has passed since the last episode\r\n\t * @return true if 1 week has passed else false\r\n\t */\r\n\tfunction isOneWeekPassed() public view returns(bool) {\r\n\t\treturn super._isOneWeekPassed();\r\n\t}\r\n\r\n\t// do not allow to send ETH here. Instead use buyTokens method\r\n\tfunction() {\r\n\t\trevert();\r\n\t}\r\n}\r\n",
  "sourcePath": "C:\\Projects\\DAO-Templates\\contracts\\3-DevZenDao\\DevZenDao.sol",
  "ast": {
    "absolutePath": "/C/Projects/DAO-Templates/contracts/3-DevZenDao/DevZenDao.sol",
    "exportedSymbols": {
      "DevZenDao": [
        1000
      ]
    },
    "id": 1001,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 838,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "id": 839,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:33:5"
      },
      {
        "absolutePath": "@thetta/core/contracts/DaoBase.sol",
        "file": "@thetta/core/contracts/DaoBase.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 4872,
        "src": "120:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/DaoBaseImpersonated.sol",
        "file": "@thetta/core/contracts/DaoBaseImpersonated.sol",
        "id": 841,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 5706,
        "src": "166:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/IDaoBase.sol",
        "file": "@thetta/core/contracts/IDaoBase.sol",
        "id": 842,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 7219,
        "src": "224:45:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/tokens/StdDaoToken.sol",
        "file": "@thetta/core/contracts/tokens/StdDaoToken.sol",
        "id": 843,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 11056,
        "src": "271:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Projects/DAO-Templates/contracts/3-DevZenDao/DevZenDaoCore.sol",
        "file": "./DevZenDaoCore.sol",
        "id": 844,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 2285,
        "src": "330:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 845,
              "name": "DevZenDaoCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2284,
              "src": "385:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DevZenDaoCore_$2284",
                "typeString": "contract DevZenDaoCore"
              }
            },
            "id": 846,
            "nodeType": "InheritanceSpecifier",
            "src": "385:13:5"
          }
        ],
        "contractDependencies": [
          2284,
          6385,
          7226
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1000,
        "linearizedBaseContracts": [
          1000,
          2284,
          6385,
          7226
        ],
        "name": "DevZenDao",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "505:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 859,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 854,
                    "name": "_daoBase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "486:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDaoBase_$7218",
                      "typeString": "contract IDaoBase"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 855,
                    "name": "_tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 851,
                    "src": "496:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 856,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 853,
                  "name": "DevZenDaoCore",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2284,
                  "src": "472:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DevZenDaoCore_$2284_$",
                    "typeString": "type(contract DevZenDaoCore)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "472:32:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "name": "_daoBase",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "421:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDaoBase_$7218",
                    "typeString": "contract IDaoBase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 847,
                    "name": "IDaoBase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7218,
                    "src": "421:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDaoBase_$7218",
                      "typeString": "contract IDaoBase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "443:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 849,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "443:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 850,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "443:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "416:48:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:5"
            },
            "scope": 1000,
            "src": "405:102:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "901:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "_param",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "922:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "930:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 869,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "906:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setParam",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1749,
                      "src": "906:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "906:31:5"
                }
              ]
            },
            "documentation": "@dev Change the DAO parameters\r\nThis method should require voting!\r\nNotice: DevZen_updateDaoParams is a custom action!\r",
            "id": 877,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 866,
                    "name": "DEV_ZEN_UPDATE_DAO_PARAMS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1589,
                    "src": "874:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 867,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 865,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "866:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:34:5"
              }
            ],
            "name": "setParam",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "_param",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "830:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "846:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "829:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:5"
            },
            "scope": 1000,
            "src": "812:130:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "1184:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 888,
                        "name": "_output",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "1210:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 885,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1189:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_withdrawEther",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1768,
                      "src": "1189:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:29:5"
                }
              ]
            },
            "documentation": "@dev Withdraw all collected ETH to the _output.\r\nThis method should require voting!\r\nNotice: DevZen_withdrawEther is a custom action!\r",
            "id": 892,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 882,
                    "name": "DEV_ZEN_WITHDRAW_ETHER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1594,
                    "src": "1160:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 883,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 881,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1152:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1152:31:5"
              }
            ],
            "name": "withdrawEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "name": "_output",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "1128:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:17:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:5"
            },
            "scope": 1000,
            "src": "1105:118:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "1455:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_nextHost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "1482:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1460:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_selectNextHost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1791,
                      "src": "1460:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:32:5"
                }
              ]
            },
            "documentation": "@dev Select next episode's host\r\nThis method should require voting!\r\nNotice: DevZen_selectNextHost is a custom action!\r",
            "id": 907,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 897,
                    "name": "DEV_ZEN_SELECT_NEXT_HOST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1599,
                    "src": "1429:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 898,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 896,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1421:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1421:33:5"
              }
            ],
            "name": "selectNextHost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "_nextHost",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "1395:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1394:19:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:0:5"
            },
            "scope": 1000,
            "src": "1371:126:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "1768:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "_guest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "1795:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 915,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeTheGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1856,
                      "src": "1773:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:29:5"
                }
              ]
            },
            "documentation": "@dev Changes the guest in \"legal\" way\r\n@param _guest New guest address\r\nWhen guest is changed via this function we ensure that stake is returned to previous guest.\r",
            "id": 922,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 912,
                    "name": "DEV_ZEN_CHANGE_GUEST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1604,
                    "src": "1746:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 913,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 911,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1738:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:29:5"
              }
            ],
            "name": "changeTheGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "name": "_guest",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1715:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1714:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:0:5"
            },
            "scope": 1000,
            "src": "1691:116:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "2168:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 933,
                        "name": "_guest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 924,
                        "src": "2205:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 930,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "2173:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emergency_ChangeTheGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1881,
                      "src": "2173:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:39:5"
                }
              ]
            },
            "documentation": "@dev Set the guest (emergency)\r\nIn normal circumst. people should use 'becomeTheNextShowGuest' method. \r\nHowever, sometimes DevZen team should be able to fix the next guest!\r\nNotice: DevZen_emergencyChangeGuest is a custom action!\r",
            "id": 937,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 927,
                    "name": "DEV_ZEN_EMERGENCY_CHANGE_GUEST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1609,
                    "src": "2136:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 928,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 926,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "2128:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2128:39:5"
              }
            ],
            "name": "emergency_ChangeTheGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "name": "_guest",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "2105:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2104:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2168:0:5"
            },
            "scope": 1000,
            "src": "2071:146:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 951,
              "nodeType": "Block",
              "src": "2572:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "_guestHasCome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "2602:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 945,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "2577:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_moveToNextEpisode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2087,
                      "src": "2577:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:39:5"
                }
              ]
            },
            "documentation": "@dev Move to next episode\r\n@param _guestHasCome Whether the guest(initual or emergency) has come to the show\r\nShould be called right AFTER the recording of the current episode\r\nNotice: DevZen_moveToNextEpisode is a custom action!\r",
            "id": 952,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 942,
                    "name": "DEV_ZEN_MOVE_TO_NEXT_EPISODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1614,
                    "src": "2542:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 943,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 941,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "2534:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2534:37:5"
              }
            ],
            "name": "moveToNextEpisode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "name": "_guestHasCome",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "2507:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2506:20:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:5"
            },
            "scope": 1000,
            "src": "2480:141:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "3001:48:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "_adText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "3036:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 957,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3006:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_runAdsInTheNextEpisode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2138,
                      "src": "3006:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 964,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "runAdsInTheNextEpisode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "name": "_adText",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2978:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2977:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:0:5"
            },
            "scope": 1000,
            "src": "2946:103:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "3269:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 967,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3274:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_becomeTheNextShowGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2157,
                      "src": "3274:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:31:5"
                }
              ]
            },
            "documentation": "@dev Become the next guest.\r\nTo become a guest sender should buy 5 DZT and approve dao to put them at stake. Sender will get back tokens after the show.\r",
            "id": 973,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "becomeTheNextShowGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3269:0:5"
            },
            "scope": 1000,
            "src": "3228:82:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 981,
              "nodeType": "Block",
              "src": "3670:28:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3675:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_buyTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2204,
                      "src": "3675:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:18:5"
                }
              ]
            },
            "documentation": "@dev Any listener can get a ERC20 “devzen” tokens by sending X ETHers to the DevZen DAO and becomes a “patron” (i.e. token holder).\r",
            "id": 982,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "buyTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3650:2:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3670:0:5"
            },
            "scope": 1000,
            "src": "3632:66:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "3880:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3892:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_isOneWeekPassed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2227,
                      "src": "3892:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 986,
                  "id": 990,
                  "nodeType": "Return",
                  "src": "3885:31:5"
                }
              ]
            },
            "documentation": "@dev Check that 1 week has passed since the last episode\r\n@return true if 1 week has passed else false\r",
            "id": 992,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isOneWeekPassed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3851:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 992,
                  "src": "3874:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3873:6:5"
            },
            "scope": 1000,
            "src": "3827:94:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "4002:18:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 995,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13098,
                        13099
                      ],
                      "referencedDeclaration": 13098,
                      "src": "4007:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4007:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "4007:8:5"
                }
              ]
            },
            "documentation": null,
            "id": 999,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3999:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:5"
            },
            "scope": 1000,
            "src": "3991:29:5",
            "stateMutability": "nonpayable",
            "superFunction": 2234,
            "visibility": "public"
          }
        ],
        "scope": 1001,
        "src": "363:3660:5"
      }
    ],
    "src": "0:4025:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Projects/DAO-Templates/contracts/3-DevZenDao/DevZenDao.sol",
    "exportedSymbols": {
      "DevZenDao": [
        1000
      ]
    },
    "id": 1001,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 838,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "id": 839,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:33:5"
      },
      {
        "absolutePath": "@thetta/core/contracts/DaoBase.sol",
        "file": "@thetta/core/contracts/DaoBase.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 4872,
        "src": "120:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/DaoBaseImpersonated.sol",
        "file": "@thetta/core/contracts/DaoBaseImpersonated.sol",
        "id": 841,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 5706,
        "src": "166:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/IDaoBase.sol",
        "file": "@thetta/core/contracts/IDaoBase.sol",
        "id": 842,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 7219,
        "src": "224:45:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/tokens/StdDaoToken.sol",
        "file": "@thetta/core/contracts/tokens/StdDaoToken.sol",
        "id": 843,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 11056,
        "src": "271:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Projects/DAO-Templates/contracts/3-DevZenDao/DevZenDaoCore.sol",
        "file": "./DevZenDaoCore.sol",
        "id": 844,
        "nodeType": "ImportDirective",
        "scope": 1001,
        "sourceUnit": 2285,
        "src": "330:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 845,
              "name": "DevZenDaoCore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2284,
              "src": "385:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DevZenDaoCore_$2284",
                "typeString": "contract DevZenDaoCore"
              }
            },
            "id": 846,
            "nodeType": "InheritanceSpecifier",
            "src": "385:13:5"
          }
        ],
        "contractDependencies": [
          2284,
          6385,
          7226
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1000,
        "linearizedBaseContracts": [
          1000,
          2284,
          6385,
          7226
        ],
        "name": "DevZenDao",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "505:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 859,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 854,
                    "name": "_daoBase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 848,
                    "src": "486:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDaoBase_$7218",
                      "typeString": "contract IDaoBase"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 855,
                    "name": "_tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 851,
                    "src": "496:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 856,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 853,
                  "name": "DevZenDaoCore",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2284,
                  "src": "472:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DevZenDaoCore_$2284_$",
                    "typeString": "type(contract DevZenDaoCore)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "472:32:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 848,
                  "name": "_daoBase",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "421:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDaoBase_$7218",
                    "typeString": "contract IDaoBase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 847,
                    "name": "IDaoBase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7218,
                    "src": "421:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDaoBase_$7218",
                      "typeString": "contract IDaoBase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "443:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 849,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "443:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 850,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "443:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "416:48:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:5"
            },
            "scope": 1000,
            "src": "405:102:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "901:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "_param",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "922:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 873,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "930:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 869,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "906:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setParam",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1749,
                      "src": "906:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "906:31:5"
                }
              ]
            },
            "documentation": "@dev Change the DAO parameters\r\nThis method should require voting!\r\nNotice: DevZen_updateDaoParams is a custom action!\r",
            "id": 877,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 866,
                    "name": "DEV_ZEN_UPDATE_DAO_PARAMS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1589,
                    "src": "874:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 867,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 865,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "866:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "866:34:5"
              }
            ],
            "name": "setParam",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "_param",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "830:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "846:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "829:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:5"
            },
            "scope": 1000,
            "src": "812:130:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "1184:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 888,
                        "name": "_output",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "1210:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 885,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1189:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_withdrawEther",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1768,
                      "src": "1189:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:29:5"
                }
              ]
            },
            "documentation": "@dev Withdraw all collected ETH to the _output.\r\nThis method should require voting!\r\nNotice: DevZen_withdrawEther is a custom action!\r",
            "id": 892,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 882,
                    "name": "DEV_ZEN_WITHDRAW_ETHER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1594,
                    "src": "1160:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 883,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 881,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1152:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1152:31:5"
              }
            ],
            "name": "withdrawEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "name": "_output",
                  "nodeType": "VariableDeclaration",
                  "scope": 892,
                  "src": "1128:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:17:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:5"
            },
            "scope": 1000,
            "src": "1105:118:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "1455:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 903,
                        "name": "_nextHost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "1482:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 900,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1460:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_selectNextHost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1791,
                      "src": "1460:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:32:5"
                }
              ]
            },
            "documentation": "@dev Select next episode's host\r\nThis method should require voting!\r\nNotice: DevZen_selectNextHost is a custom action!\r",
            "id": 907,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 897,
                    "name": "DEV_ZEN_SELECT_NEXT_HOST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1599,
                    "src": "1429:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 898,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 896,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1421:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1421:33:5"
              }
            ],
            "name": "selectNextHost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "_nextHost",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "1395:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1394:19:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:0:5"
            },
            "scope": 1000,
            "src": "1371:126:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "1768:39:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "_guest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "1795:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 915,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "1773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_changeTheGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1856,
                      "src": "1773:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:29:5"
                }
              ]
            },
            "documentation": "@dev Changes the guest in \"legal\" way\r\n@param _guest New guest address\r\nWhen guest is changed via this function we ensure that stake is returned to previous guest.\r",
            "id": 922,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 912,
                    "name": "DEV_ZEN_CHANGE_GUEST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1604,
                    "src": "1746:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 913,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 911,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "1738:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:29:5"
              }
            ],
            "name": "changeTheGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "name": "_guest",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1715:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1714:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:0:5"
            },
            "scope": 1000,
            "src": "1691:116:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "2168:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 933,
                        "name": "_guest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 924,
                        "src": "2205:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 930,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "2173:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emergency_ChangeTheGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1881,
                      "src": "2173:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:39:5"
                }
              ]
            },
            "documentation": "@dev Set the guest (emergency)\r\nIn normal circumst. people should use 'becomeTheNextShowGuest' method. \r\nHowever, sometimes DevZen team should be able to fix the next guest!\r\nNotice: DevZen_emergencyChangeGuest is a custom action!\r",
            "id": 937,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 927,
                    "name": "DEV_ZEN_EMERGENCY_CHANGE_GUEST",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1609,
                    "src": "2136:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 928,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 926,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "2128:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2128:39:5"
              }
            ],
            "name": "emergency_ChangeTheGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "name": "_guest",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "2105:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2104:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2168:0:5"
            },
            "scope": 1000,
            "src": "2071:146:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 951,
              "nodeType": "Block",
              "src": "2572:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "_guestHasCome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "2602:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 945,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "2577:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_moveToNextEpisode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2087,
                      "src": "2577:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:39:5"
                }
              ]
            },
            "documentation": "@dev Move to next episode\r\n@param _guestHasCome Whether the guest(initual or emergency) has come to the show\r\nShould be called right AFTER the recording of the current episode\r\nNotice: DevZen_moveToNextEpisode is a custom action!\r",
            "id": 952,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 942,
                    "name": "DEV_ZEN_MOVE_TO_NEXT_EPISODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1614,
                    "src": "2542:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 943,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 941,
                  "name": "isCanDo",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6345,
                  "src": "2534:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2534:37:5"
              }
            ],
            "name": "moveToNextEpisode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "name": "_guestHasCome",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "2507:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2506:20:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:5"
            },
            "scope": 1000,
            "src": "2480:141:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "3001:48:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "_adText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "3036:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 957,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3006:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_runAdsInTheNextEpisode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2138,
                      "src": "3006:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 964,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "runAdsInTheNextEpisode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "name": "_adText",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "2978:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2977:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:0:5"
            },
            "scope": 1000,
            "src": "2946:103:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "3269:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 967,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3274:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_becomeTheNextShowGuest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2157,
                      "src": "3274:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:31:5"
                }
              ]
            },
            "documentation": "@dev Become the next guest.\r\nTo become a guest sender should buy 5 DZT and approve dao to put them at stake. Sender will get back tokens after the show.\r",
            "id": 973,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "becomeTheNextShowGuest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3269:0:5"
            },
            "scope": 1000,
            "src": "3228:82:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 981,
              "nodeType": "Block",
              "src": "3670:28:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3675:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_buyTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2204,
                      "src": "3675:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:18:5"
                }
              ]
            },
            "documentation": "@dev Any listener can get a ERC20 “devzen” tokens by sending X ETHers to the DevZen DAO and becomes a “patron” (i.e. token holder).\r",
            "id": 982,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "buyTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3650:2:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3670:0:5"
            },
            "scope": 1000,
            "src": "3632:66:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 991,
              "nodeType": "Block",
              "src": "3880:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 987,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13201,
                        "src": "3892:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_DevZenDao_$1000",
                          "typeString": "contract super DevZenDao"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_isOneWeekPassed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2227,
                      "src": "3892:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 986,
                  "id": 990,
                  "nodeType": "Return",
                  "src": "3885:31:5"
                }
              ]
            },
            "documentation": "@dev Check that 1 week has passed since the last episode\r\n@return true if 1 week has passed else false\r",
            "id": 992,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isOneWeekPassed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3851:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 992,
                  "src": "3874:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3873:6:5"
            },
            "scope": 1000,
            "src": "3827:94:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "4002:18:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 995,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13098,
                        13099
                      ],
                      "referencedDeclaration": 13098,
                      "src": "4007:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4007:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "4007:8:5"
                }
              ]
            },
            "documentation": null,
            "id": 999,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3999:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:5"
            },
            "scope": 1000,
            "src": "3991:29:5",
            "stateMutability": "nonpayable",
            "superFunction": 2234,
            "visibility": "public"
          }
        ],
        "scope": 1001,
        "src": "363:3660:5"
      }
    ],
    "src": "0:4025:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-12T07:25:31.308Z"
}